# -*- coding: utf-8 -*-
"""getDatasets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YhU3kpjGR6IRD-Vbq-POMCiMcsgGhkip
"""

from keras.utils import to_categorical
from keras.datasets import cifar10, cifar100
import numpy as np
from keras.utils import np_utils

def getCifar10Data():
  (x_train, y_train), (x_test, y_test) = cifar10.load_data()
  y_train = to_categorical(y_train, 10)
  y_test = to_categorical(y_test, 10)
  x_train = x_train.astype('float32')
  x_test = x_test.astype('float32')
  x_train /= 255.0
  x_test /= 255.0
  return x_train, y_train, x_test, y_test

def normalize(x_train,x_test):
    mean = np.mean(x_train,axis=(0,1,2,3))
    std = np.std(x_train, axis=(0, 1, 2, 3))
    print(mean)
    print(std)
    x_train = (x_train-mean)/(std+1e-7)
    x_test = (x_test-mean)/(std+1e-7)
    return x_train, x_test

def getCifar100Data():
  (x_train, y_train), (x_test, y_test) = cifar100.load_data()
  x_train = x_train.astype('float32')
  x_test = x_test.astype('float32')
  x_train, x_test = normalize(x_train, x_test)
  y_train = np_utils.to_categorical(y_train)
  y_test = np_utils.to_categorical(y_test)
  return x_train, y_train,x_test, y_test
  num_classes = y_test.shape[1]